
//// GENERIC MACROS ///////////////////////////////////////////////////////////
#define ASPECT_FILL(_ASPECT) \
   aspect: _ASPECT _ASPECT; aspect_preference: NONE;
#define TILED_PATTERN(_WIDTH, _HEIGHT) \
   fill { size { relative: 0.0 0.0; offset: _WIDTH _HEIGHT; } }
#define TILED_HORIZ(_WIDTH) \
   fill { size { relative: 0.0 1.0; offset: _WIDTH 0; } }
#define FIXED_SIZE(_WIDTH, _HEIGHT) \
   min: _WIDTH _HEIGHT; max: _WIDTH _HEIGHT; fixed: 1 1;
#define DBG_SHOW(_PART, _R, _G, _B) \
   part { name: "dbg_show"_PART; \
      type: RECT; mouse_events: 0; \
      description { state: "default" 0.0; \
         rel1.to: _PART; rel2.to: _PART; \
         color: _R _G _B 50; } }


images {
   image: "bg.jpg" COMP;
   image: "pi.png" COMP;
   image: "pi_shad.png" COMP;
   image: "icon_pause.png" COMP;
   image: "icon_play.png" COMP;
}

externals {
   external: "elementary";
}


collections {

   group { name: "pigreco/layout";

      data {
         item: "digits_color" "200 200 200 255";
      }

      parts {

         part { name: "bg";
            type: IMAGE;
            description { state: "default" 0.0;
               image.normal: "bg.jpg";
               
            }
         }

         part { name: "bg.pi_shad";
            type: IMAGE;
            description { state: "default" 0.0;
               image.normal: "pi_shad.png";
               aspect: 1 1;
               aspect_preference: BOTH;
               rel1.to: "bg.pi";
               rel2.to: "bg.pi";
            }
         }

         part { name: "bg.pi";
            type: IMAGE;
            description { state: "default" 0.0;
               image.normal: "pi.png";
               color: 150 150 150 150;
               aspect: 1 1;
               aspect_preference: BOTH;
               rel1.relative: 0.0 0.2;
               rel2.relative: 1.0 0.8;
            }
         }

         part { name: "textgrid.swallow";
            type: SWALLOW;
            description { state: "default" 0.0;
               rel1.offset: 6 6;
               rel2.offset: -7 -7;
            }
         }

         part { name: "controls_clip";
            type: RECT;
            description { state: "default" 0.0;
               color: 255 255 255 0;
            }
            description { state: "visible" 0.0;
               color: 255 255 255 255;
            }
         }
         part { name: "scroll.slider";
            type: EXTERNAL;
            source: "elm/slider";
            clip_to: "controls_clip";
            description { state: "default" 0.0;
               rel1 {
                  to_x: "autoscroll_btn";
               }
               rel2 {
                  to: "autoscroll_btn";
                  relative: 1.0 0.0;
               }
               params {
                  bool: "horizontal" 0;
               }
            }
         }
         part { name: "autoscroll_btn";
            type: IMAGE;
            clip_to: "controls_clip";
            description { state: "default" 0.0;
               max: 32 32;
               align: 1.0 1.0;
               image.normal: "icon_pause.png";
            }
            description { state: "paused" 0.0;
               inherit: "default" 0.0;
               image.normal: "icon_play.png";
            }
         }

         part { name: "events";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
      }
      programs {
         program { // show controls
            signal: "mouse,in"; source: "events";
            action: STATE_SET "visible" 0.0;
            transition: LINEAR 0.3;
            target: "controls_clip";
         }
         program { // hide controls
            signal: "mouse,out"; source: "events";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.3;
            target: "controls_clip";
         }
         program { // autoscroll toggle
            signal: "mouse,down,1"; source: "autoscroll_btn";
            action: SIGNAL_EMIT "autoscroll,toggle" "";
         }
         program { // autoscroll set play
            signal: "autoscroll,play,set"; source: "";
            action: STATE_SET "default";
            target: "autoscroll_btn";
         }
         program { // autoscroll set play
            signal: "autoscroll,pause,set"; source: "";
            action: STATE_SET "paused";
            target: "autoscroll_btn";
         }
      }
   }
}
